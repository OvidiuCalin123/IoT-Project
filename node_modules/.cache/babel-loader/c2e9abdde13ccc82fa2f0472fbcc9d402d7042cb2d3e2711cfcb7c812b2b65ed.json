{"ast":null,"code":"/*\r\nimport React, { useState, useEffect } from \"react\";\r\nimport iotLogo from \"../designFIles/IoT_logo_transparent_bigger.png\";\r\nimport \"./welcomeBody.css\";\r\nimport { Chart } from \"react-charts\";\r\n\r\nexport const WelcomeBody = () => {\r\n  const [showVisualMenuSelected, setShowVisualMenuSelected] = useState(\"table\");\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const handleLogout = () => {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const data = React.useMemo(\r\n      () => [\r\n        {\r\n          label: \"Series 1\",\r\n          data: [\r\n            [0, 1],\r\n            [1, 2],\r\n            [2, 4],\r\n            [3, 2],\r\n            [4, 7],\r\n          ],\r\n        },\r\n        {\r\n          label: \"Series 2\",\r\n          data: [\r\n            [0, 3],\r\n            [1, 1],\r\n            [2, 5],\r\n            [3, 6],\r\n            [4, 4],\r\n          ],\r\n        },\r\n      ],\r\n      []\r\n    );\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const axes = React.useMemo(\r\n      () => [\r\n        { primary: true, type: \"linear\", position: \"bottom\" },\r\n        { type: \"linear\", position: \"left\" },\r\n      ],\r\n      []\r\n    );\r\n    const lineChart = (\r\n      // A react-chart hyper-responsively and continuously fills the available\r\n      // space of its parent element automatically\r\n      <div\r\n        style={{\r\n          width: \"400px\",\r\n          height: \"300px\",\r\n        }}\r\n      >\r\n        <Chart data={data} axes={axes} />\r\n      </div>\r\n    );\r\n    const confirmLogout = window.confirm(\"Are you sure you want to log out?\");\r\n    if (confirmLogout) {\r\n      sessionStorage.clear();\r\n\r\n      fetch(\"/logout\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\r\n          Pragma: \"no-cache\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n      })\r\n        .then(() => {\r\n          const baseURL = window.location.origin;\r\n          window.location.href = `${baseURL}/login`;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error logging out:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fileURL =\r\n      \"https://firebasestorage.googleapis.com/v0/b/iot-light-68724.appspot.com/o/bulbOnTime.txt?alt=media&token=74cb4268-f94e-46da-8e54-83489ab34a80\";\r\n\r\n    fetch(fileURL)\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        const rows = data.split(\"\\n\").map((row) => {\r\n          const [dateTime, timeOnSeconds] = row.split(\" - Time On: \");\r\n          const [date, timeOfDay] = dateTime.split(\" \");\r\n          const formattedTimeOfDay = formatTimeOfDay(timeOfDay);\r\n          const formattedTimeOn = timeOnSeconds\r\n            ? timeOnSeconds.split(\" \")[0]\r\n            : timeOnSeconds;\r\n          return [date, formattedTimeOfDay, formattedTimeOn];\r\n        });\r\n        const sortedData = rows.sort((a, b) => new Date(b[0]) - new Date(a[0]));\r\n        setTableData(sortedData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching file:\", error);\r\n      });\r\n  }, []);\r\n\r\n  const formatTimeOfDay = (timeOfDay) => {\r\n    return timeOfDay;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"#414141\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      <div className=\"header-style\">\r\n        <div className=\"nav\">\r\n          <div className=\"left-nav-text\">Eco Light</div>\r\n          <img\r\n            className=\"header-logo\"\r\n            src={iotLogo}\r\n            alt=\"IoT Logo\"\r\n            style={{ width: \"5rem\", height: \"auto\", paddingLeft: \"0.5rem\" }}\r\n          />\r\n          <div className=\"right-nav-text\" onClick={handleLogout}>\r\n            Log Out\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"options-layout\">\r\n        <div className=\"parent\">\r\n          <a\r\n            className={\r\n              showVisualMenuSelected === \"table\" ? \"clicked-option\" : \"child\"\r\n            }\r\n            onClick={() => setShowVisualMenuSelected(\"table\")}\r\n            style={{\r\n              display: \"inline-block\",\r\n              padding: \"0.5rem 1rem\",\r\n              margin: \"0.5rem\",\r\n              cursor: \"pointer\",\r\n              color: showVisualMenuSelected === \"table\" ? \"#414141\" : \"#fff\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"2.5rem\",\r\n              border: \"0.2rem solid #ffffff\",\r\n              borderRadius: \"0.45rem\",\r\n              backgroundColor:\r\n                showVisualMenuSelected === \"table\" ? \"#ffffff\" : \"transparent\",\r\n              transition: \"background-color 0.3s, color 0.3s\",\r\n            }}\r\n          >\r\n            Table\r\n          </a>\r\n          <a\r\n            className={\r\n              showVisualMenuSelected === \"graph\" ? \"clicked-option\" : \"child\"\r\n            }\r\n            onClick={() => setShowVisualMenuSelected(\"graph\")}\r\n            style={{\r\n              display: \"inline-block\",\r\n              padding: \"0.5rem 1rem\",\r\n              margin: \"0.5rem\",\r\n              cursor: \"pointer\",\r\n              color: showVisualMenuSelected === \"graph\" ? \"#414141\" : \"#fff\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"2.5rem\",\r\n              border: \"0.2rem solid #ffffff\",\r\n              borderRadius: \"0.45rem\",\r\n              backgroundColor:\r\n                showVisualMenuSelected === \"graph\" ? \"#ffffff\" : \"transparent\",\r\n              transition: \"background-color 0.3s, color 0.3s\",\r\n            }}\r\n          >\r\n            Graph\r\n          </a>\r\n        </div>\r\n      </div>\r\n      {showVisualMenuSelected === \"table\" ? (\r\n        <div\r\n          style={{\r\n            margin: \"0 auto\",\r\n            maxWidth: \"800px\",\r\n            backgroundColor: \"white\",\r\n          }}\r\n        >\r\n          <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ border: \"1px solid #ddd\", padding: \"8px\" }}>\r\n                  Date\r\n                </th>\r\n                <th style={{ border: \"1px solid #ddd\", padding: \"8px\" }}>\r\n                  Time of Day\r\n                </th>\r\n                <th style={{ border: \"1px solid #ddd\", padding: \"8px\" }}>\r\n                  Time On (seconds)\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tableData.map((row, index) => (\r\n                <tr key={index}>\r\n                  <td style={{ border: \"1px solid #ddd\", padding: \"8px\" }}>\r\n                    {row[0]}\r\n                  </td>\r\n                  <td style={{ border: \"1px solid #ddd\", padding: \"8px\" }}>\r\n                    {row[1]}\r\n                  </td>\r\n                  <td style={{ border: \"1px solid #ddd\", padding: \"8px\" }}>\r\n                    {row[2]}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          {\" \"}\r\n          <div\r\n            style={{\r\n              width: \"1000px\",\r\n              height: \"350px\",\r\n              backgroundColor: \"#fff\",\r\n              margin: \"0 auto\",\r\n            }}\r\n          >\r\n            <Chart\r\n              data={[\r\n                {\r\n                  label: \"Series 1\",\r\n                  data: [\r\n                    [0, 1],\r\n                    [1, 2],\r\n                    [2, 4],\r\n                    [3, 2],\r\n                    [4, 7],\r\n                  ],\r\n                },\r\n                {\r\n                  label: \"Series 2\",\r\n                  data: [\r\n                    [0, 3],\r\n                    [1, 1],\r\n                    [2, 5],\r\n                    [3, 6],\r\n                    [4, 4],\r\n                  ],\r\n                },\r\n              ]}\r\n              axes={[\r\n                { primary: true, type: \"linear\", position: \"bottom\" },\r\n                { type: \"linear\", position: \"left\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomeBody;\r\n*/","map":{"version":3,"names":[],"sources":["C:/Users/lenovo/OneDrive - Universitatea Politehnica Timisoara/Desktop/IoT website/EcoLight/src/IoT/welcomeBody.js"],"sourcesContent":["/*\r\nimport React, { useState, useEffect } from \"react\";\r\nimport iotLogo from \"../designFIles/IoT_logo_transparent_bigger.png\";\r\nimport \"./welcomeBody.css\";\r\nimport { Chart } from \"react-charts\";\r\n\r\nexport const WelcomeBody = () => {\r\n  const [showVisualMenuSelected, setShowVisualMenuSelected] = useState(\"table\");\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const handleLogout = () => {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const data = React.useMemo(\r\n      () => [\r\n        {\r\n          label: \"Series 1\",\r\n          data: [\r\n            [0, 1],\r\n            [1, 2],\r\n            [2, 4],\r\n            [3, 2],\r\n            [4, 7],\r\n          ],\r\n        },\r\n        {\r\n          label: \"Series 2\",\r\n          data: [\r\n            [0, 3],\r\n            [1, 1],\r\n            [2, 5],\r\n            [3, 6],\r\n            [4, 4],\r\n          ],\r\n        },\r\n      ],\r\n      []\r\n    );\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const axes = React.useMemo(\r\n      () => [\r\n        { primary: true, type: \"linear\", position: \"bottom\" },\r\n        { type: \"linear\", position: \"left\" },\r\n      ],\r\n      []\r\n    );\r\n    const lineChart = (\r\n      // A react-chart hyper-responsively and continuously fills the available\r\n      // space of its parent element automatically\r\n      <div\r\n        style={{\r\n          width: \"400px\",\r\n          height: \"300px\",\r\n        }}\r\n      >\r\n        <Chart data={data} axes={axes} />\r\n      </div>\r\n    );\r\n    const confirmLogout = window.confirm(\"Are you sure you want to log out?\");\r\n    if (confirmLogout) {\r\n      sessionStorage.clear();\r\n\r\n      fetch(\"/logout\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\r\n          Pragma: \"no-cache\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n      })\r\n        .then(() => {\r\n          const baseURL = window.location.origin;\r\n          window.location.href = `${baseURL}/login`;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error logging out:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fileURL =\r\n      \"https://firebasestorage.googleapis.com/v0/b/iot-light-68724.appspot.com/o/bulbOnTime.txt?alt=media&token=74cb4268-f94e-46da-8e54-83489ab34a80\";\r\n\r\n    fetch(fileURL)\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        const rows = data.split(\"\\n\").map((row) => {\r\n          const [dateTime, timeOnSeconds] = row.split(\" - Time On: \");\r\n          const [date, timeOfDay] = dateTime.split(\" \");\r\n          const formattedTimeOfDay = formatTimeOfDay(timeOfDay);\r\n          const formattedTimeOn = timeOnSeconds\r\n            ? timeOnSeconds.split(\" \")[0]\r\n            : timeOnSeconds;\r\n          return [date, formattedTimeOfDay, formattedTimeOn];\r\n        });\r\n        const sortedData = rows.sort((a, b) => new Date(b[0]) - new Date(a[0]));\r\n        setTableData(sortedData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching file:\", error);\r\n      });\r\n  }, []);\r\n\r\n  const formatTimeOfDay = (timeOfDay) => {\r\n    return timeOfDay;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"#414141\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      <div className=\"header-style\">\r\n        <div className=\"nav\">\r\n          <div className=\"left-nav-text\">Eco Light</div>\r\n          <img\r\n            className=\"header-logo\"\r\n            src={iotLogo}\r\n            alt=\"IoT Logo\"\r\n            style={{ width: \"5rem\", height: \"auto\", paddingLeft: \"0.5rem\" }}\r\n          />\r\n          <div className=\"right-nav-text\" onClick={handleLogout}>\r\n            Log Out\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"options-layout\">\r\n        <div className=\"parent\">\r\n          <a\r\n            className={\r\n              showVisualMenuSelected === \"table\" ? \"clicked-option\" : \"child\"\r\n            }\r\n            onClick={() => setShowVisualMenuSelected(\"table\")}\r\n            style={{\r\n              display: \"inline-block\",\r\n              padding: \"0.5rem 1rem\",\r\n              margin: \"0.5rem\",\r\n              cursor: \"pointer\",\r\n              color: showVisualMenuSelected === \"table\" ? \"#414141\" : \"#fff\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"2.5rem\",\r\n              border: \"0.2rem solid #ffffff\",\r\n              borderRadius: \"0.45rem\",\r\n              backgroundColor:\r\n                showVisualMenuSelected === \"table\" ? \"#ffffff\" : \"transparent\",\r\n              transition: \"background-color 0.3s, color 0.3s\",\r\n            }}\r\n          >\r\n            Table\r\n          </a>\r\n          <a\r\n            className={\r\n              showVisualMenuSelected === \"graph\" ? \"clicked-option\" : \"child\"\r\n            }\r\n            onClick={() => setShowVisualMenuSelected(\"graph\")}\r\n            style={{\r\n              display: \"inline-block\",\r\n              padding: \"0.5rem 1rem\",\r\n              margin: \"0.5rem\",\r\n              cursor: \"pointer\",\r\n              color: showVisualMenuSelected === \"graph\" ? \"#414141\" : \"#fff\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"2.5rem\",\r\n              border: \"0.2rem solid #ffffff\",\r\n              borderRadius: \"0.45rem\",\r\n              backgroundColor:\r\n                showVisualMenuSelected === \"graph\" ? \"#ffffff\" : \"transparent\",\r\n              transition: \"background-color 0.3s, color 0.3s\",\r\n            }}\r\n          >\r\n            Graph\r\n          </a>\r\n        </div>\r\n      </div>\r\n      {showVisualMenuSelected === \"table\" ? (\r\n        <div\r\n          style={{\r\n            margin: \"0 auto\",\r\n            maxWidth: \"800px\",\r\n            backgroundColor: \"white\",\r\n          }}\r\n        >\r\n          <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ border: \"1px solid #ddd\", padding: \"8px\" }}>\r\n                  Date\r\n                </th>\r\n                <th style={{ border: \"1px solid #ddd\", padding: \"8px\" }}>\r\n                  Time of Day\r\n                </th>\r\n                <th style={{ border: \"1px solid #ddd\", padding: \"8px\" }}>\r\n                  Time On (seconds)\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tableData.map((row, index) => (\r\n                <tr key={index}>\r\n                  <td style={{ border: \"1px solid #ddd\", padding: \"8px\" }}>\r\n                    {row[0]}\r\n                  </td>\r\n                  <td style={{ border: \"1px solid #ddd\", padding: \"8px\" }}>\r\n                    {row[1]}\r\n                  </td>\r\n                  <td style={{ border: \"1px solid #ddd\", padding: \"8px\" }}>\r\n                    {row[2]}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          {\" \"}\r\n          <div\r\n            style={{\r\n              width: \"1000px\",\r\n              height: \"350px\",\r\n              backgroundColor: \"#fff\",\r\n              margin: \"0 auto\",\r\n            }}\r\n          >\r\n            <Chart\r\n              data={[\r\n                {\r\n                  label: \"Series 1\",\r\n                  data: [\r\n                    [0, 1],\r\n                    [1, 2],\r\n                    [2, 4],\r\n                    [3, 2],\r\n                    [4, 7],\r\n                  ],\r\n                },\r\n                {\r\n                  label: \"Series 2\",\r\n                  data: [\r\n                    [0, 3],\r\n                    [1, 1],\r\n                    [2, 5],\r\n                    [3, 6],\r\n                    [4, 4],\r\n                  ],\r\n                },\r\n              ]}\r\n              axes={[\r\n                { primary: true, type: \"linear\", position: \"bottom\" },\r\n                { type: \"linear\", position: \"left\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomeBody;\r\n*/\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}