{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\OneDrive - Universitatea Politehnica Timisoara\\\\Desktop\\\\IoT website\\\\CantinaUPT\\\\src\\\\IoT\\\\firebase.js\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\"; // Import withRouter from react-router-dom\nimport withAuthRedirect from \"./withAuthRedirect\"; // Import the HOC\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WelcomePage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the website!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = WelcomePage;\nexport default _c3 = withRouter(_c2 = withAuthRedirect(WelcomePage)); // Wrap the WelcomePage component with withRouter and withAuthRedirect HOCs\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDFVKNGe37kqOBl5QfY4OJAhCFlTcX2wIY\",\n  authDomain: \"iot-project-ef186.firebaseapp.com\",\n  projectId: \"iot-project-ef186\",\n  storageBucket: \"iot-project-ef186.appspot.com\",\n  messagingSenderId: \"981937076954\",\n  appId: \"1:981937076954:web:594361c9fe1a034e2943e3\",\n  measurementId: \"G-RE47RXE6NH\"\n};\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n// Initialize Firebase Auth provider\nconst provider = new GoogleAuthProvider();\n\n// whenever a user interacts with the provider, we force them to select an account\nprovider.setCustomParameters({\n  prompt: \"select_account \"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\n\n// const app = initializeApp(firebaseConfig);\n// const auth = getAuth(app);\n// auth.languageCode = \"en\";\n// const provider = new GoogleAuthProvider();\n\n// const googlelogin = document.getElementById(\"google-login-btn\");\n// googlelogin.addEventListener(\"click\", function () {\n//   signInWithPopup(auth, provider)\n//     .then((result) => {\n//       const credential = GoogleAuthProvider.credentialFromResult(result);\n//       const user = result.user;\n//       console.log(user);\n//       window.location.href = \"../logged.html\";\n//     })\n//     .catch((error) => {\n//       const errorCode = error.code;\n//       const errorMessage = error.message;\n//     });\n// });\n\n// const analytics = getAnalytics(app);\n\n// import firebase from \"firebase/app\";\n// import \"firebase/auth\";\n\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyB3S6pXq8fZXUKignwhjnmGEqFoZlD6CBE\",\n//   authDomain: \"iot-light-68724.firebaseapp.com\",\n//   projectId: \"iot-light-68724\",\n//   storageBucket: \"iot-light-68724.appspot.com\",\n//   messagingSenderId: \"127885636351\",\n//   appId: \"1:127885636351:web:47b9a5df0098ade0e652ca\",\n// };\n\n// firebase.initializeApp(firebaseConfig);\n\n// export const auth = firebase.auth();\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"WelcomePage\");\n$RefreshReg$(_c2, \"%default%$withRouter\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","getAnalytics","React","withRouter","withAuthRedirect","jsxDEV","_jsxDEV","WelcomePage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c3","_c2","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","$RefreshReg$"],"sources":["C:/Users/lenovo/OneDrive - Universitatea Politehnica Timisoara/Desktop/IoT website/CantinaUPT/src/IoT/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router-dom\"; // Import withRouter from react-router-dom\r\nimport withAuthRedirect from \"./withAuthRedirect\"; // Import the HOC\r\n\r\nconst WelcomePage = () => {\r\n  return (\r\n    <div>\r\n      <h1>Welcome to the website!</h1>\r\n      {/* Add your welcome page content here */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(withAuthRedirect(WelcomePage)); // Wrap the WelcomePage component with withRouter and withAuthRedirect HOCs\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDFVKNGe37kqOBl5QfY4OJAhCFlTcX2wIY\",\r\n  authDomain: \"iot-project-ef186.firebaseapp.com\",\r\n  projectId: \"iot-project-ef186\",\r\n  storageBucket: \"iot-project-ef186.appspot.com\",\r\n  messagingSenderId: \"981937076954\",\r\n  appId: \"1:981937076954:web:594361c9fe1a034e2943e3\",\r\n  measurementId: \"G-RE47RXE6NH\",\r\n};\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n// Initialize Firebase Auth provider\r\nconst provider = new GoogleAuthProvider();\r\n\r\n// whenever a user interacts with the provider, we force them to select an account\r\nprovider.setCustomParameters({\r\n  prompt: \"select_account \",\r\n});\r\nexport const auth = getAuth();\r\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\r\n\r\n// const app = initializeApp(firebaseConfig);\r\n// const auth = getAuth(app);\r\n// auth.languageCode = \"en\";\r\n// const provider = new GoogleAuthProvider();\r\n\r\n// const googlelogin = document.getElementById(\"google-login-btn\");\r\n// googlelogin.addEventListener(\"click\", function () {\r\n//   signInWithPopup(auth, provider)\r\n//     .then((result) => {\r\n//       const credential = GoogleAuthProvider.credentialFromResult(result);\r\n//       const user = result.user;\r\n//       console.log(user);\r\n//       window.location.href = \"../logged.html\";\r\n//     })\r\n//     .catch((error) => {\r\n//       const errorCode = error.code;\r\n//       const errorMessage = error.message;\r\n//     });\r\n// });\r\n\r\n// const analytics = getAnalytics(app);\r\n\r\n// import firebase from \"firebase/app\";\r\n// import \"firebase/auth\";\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyB3S6pXq8fZXUKignwhjnmGEqFoZlD6CBE\",\r\n//   authDomain: \"iot-light-68724.firebaseapp.com\",\r\n//   projectId: \"iot-light-68724\",\r\n//   storageBucket: \"iot-light-68724.appspot.com\",\r\n//   messagingSenderId: \"127885636351\",\r\n//   appId: \"1:127885636351:web:47b9a5df0098ade0e652ca\",\r\n// };\r\n\r\n// firebase.initializeApp(firebaseConfig);\r\n\r\n// export const auth = firebase.auth();\r\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,eAAe,EAAEC,kBAAkB,QAAQ,eAAe;AAC5E,SAASC,YAAY,QAAQ,oBAAoB;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB,CAAC,CAAC;AAC/C,OAAOC,gBAAgB,MAAM,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA;MAAAE,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE7B,CAAC;AAEV,CAAC;AAACC,EAAA,GAPIN,WAAW;AASjB,eAAAO,GAAA,GAAeX,UAAU,CAAAY,GAAA,GAACX,gBAAgB,CAACG,WAAW,CAAC,CAAC,CAAC,CAAC;;AAE1D,MAAMS,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,mCAAmC;EAC/CC,SAAS,EAAE,mBAAmB;EAC9BC,aAAa,EAAE,+BAA+B;EAC9CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AACD;AACA,MAAMC,WAAW,GAAG3B,aAAa,CAACmB,cAAc,CAAC;AACjD;AACA,MAAMS,QAAQ,GAAG,IAAIzB,kBAAkB,CAAC,CAAC;;AAEzC;AACAyB,QAAQ,CAACC,mBAAmB,CAAC;EAC3BC,MAAM,EAAE;AACV,CAAC,CAAC;AACF,OAAO,MAAMC,IAAI,GAAG9B,OAAO,CAAC,CAAC;AAC7B,OAAO,MAAM+B,qBAAqB,GAAGA,CAAA,KAAM9B,eAAe,CAAC6B,IAAI,EAAEH,QAAQ,CAAC;;AAE1E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AAAA,IAAAZ,EAAA,EAAAE,GAAA,EAAAD,GAAA;AAAAgB,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAf,GAAA;AAAAe,YAAA,CAAAhB,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}